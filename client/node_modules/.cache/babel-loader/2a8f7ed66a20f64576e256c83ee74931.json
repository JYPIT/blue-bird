{"ast":null,"code":"export default class TweetService {\n  constructor() {\n    this.tweets = [{\n      id: 1,\n      text: '드림코딩에서 강의 들으면 너무 좋으다',\n      createdAt: '2021-05-09T04:20:57.000Z',\n      name: 'Bob',\n      username: 'bob',\n      url: 'https://widgetwhats.com/app/uploads/2019/11/free-profile-photo-whatsapp-1.png'\n    }];\n  }\n\n  async getTweets(username) {\n    return username ? this.tweets.filter(tweet => tweet.username === username) : this.tweets;\n  }\n\n  async postTweet(text) {\n    const tweet = {\n      id: Date.now(),\n      createdAt: new Date(),\n      name: 'Kevin',\n      username: 'kevin',\n      text\n    };\n    this.tweets.push(tweet);\n    fetch(`${process.env.REACT_APP_BASE_URL}/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        tweet: {\n          name: tweet.name,\n          text: tweet.text\n        }\n      })\n    }).then(console.log('Hello')).catch(console.error);\n    return tweet;\n  }\n\n  async deleteTweet(tweetId) {\n    this.tweets = this.tweets.filter(tweet => tweet.id !== tweetId);\n  }\n\n  async updateTweet(tweetId, text) {\n    const tweet = this.tweets.find(tweet => tweet.id === tweetId);\n\n    if (!tweet) {\n      throw new Error('tweet not found!');\n    }\n\n    tweet.text = text;\n    return tweet;\n  }\n\n}","map":{"version":3,"sources":["/Users/jyp/Documents/Rocket/gitblog/Node-JS/blue-bird/client/src/service/tweet.js"],"names":["TweetService","tweets","id","text","createdAt","name","username","url","getTweets","filter","tweet","postTweet","Date","now","push","fetch","process","env","REACT_APP_BASE_URL","method","headers","body","JSON","stringify","then","console","log","catch","error","deleteTweet","tweetId","updateTweet","find","Error"],"mappings":"AAAA,eAAe,MAAMA,YAAN,CAAmB;AAAA;AAAA,SAChCC,MADgC,GACvB,CACP;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,sBAFR;AAGEC,MAAAA,SAAS,EAAE,0BAHb;AAIEC,MAAAA,IAAI,EAAE,KAJR;AAKEC,MAAAA,QAAQ,EAAE,KALZ;AAMEC,MAAAA,GAAG,EAAE;AANP,KADO,CADuB;AAAA;;AAYjB,QAATC,SAAS,CAACF,QAAD,EAAW;AACxB,WAAOA,QAAQ,GACX,KAAKL,MAAL,CAAYQ,MAAZ,CAAoBC,KAAD,IAAWA,KAAK,CAACJ,QAAN,KAAmBA,QAAjD,CADW,GAEX,KAAKL,MAFT;AAGD;;AAEc,QAATU,SAAS,CAACR,IAAD,EAAO;AACpB,UAAMO,KAAK,GAAG;AACZR,MAAAA,EAAE,EAAEU,IAAI,CAACC,GAAL,EADQ;AAEZT,MAAAA,SAAS,EAAE,IAAIQ,IAAJ,EAFC;AAGZP,MAAAA,IAAI,EAAE,OAHM;AAIZC,MAAAA,QAAQ,EAAE,OAJE;AAKZH,MAAAA;AALY,KAAd;AAOA,SAAKF,MAAL,CAAYa,IAAZ,CAAiBJ,KAAjB;AAEAK,IAAAA,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,GAAnC,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBb,QAAAA,KAAK,EAAE;AACLL,UAAAA,IAAI,EAAEK,KAAK,CAACL,IADP;AAELF,UAAAA,IAAI,EAAEO,KAAK,CAACP;AAFP;AADY,OAAf;AALoC,KAAvC,CAAL,CAYGqB,IAZH,CAYQC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAZR,EAaGC,KAbH,CAaSF,OAAO,CAACG,KAbjB;AAcA,WAAOlB,KAAP;AACD;;AAEgB,QAAXmB,WAAW,CAACC,OAAD,EAAU;AACzB,SAAK7B,MAAL,GAAc,KAAKA,MAAL,CAAYQ,MAAZ,CAAoBC,KAAD,IAAWA,KAAK,CAACR,EAAN,KAAa4B,OAA3C,CAAd;AACD;;AAEgB,QAAXC,WAAW,CAACD,OAAD,EAAU3B,IAAV,EAAgB;AAC/B,UAAMO,KAAK,GAAG,KAAKT,MAAL,CAAY+B,IAAZ,CAAkBtB,KAAD,IAAWA,KAAK,CAACR,EAAN,KAAa4B,OAAzC,CAAd;;AACA,QAAI,CAACpB,KAAL,EAAY;AACV,YAAM,IAAIuB,KAAJ,CAAU,kBAAV,CAAN;AACD;;AACDvB,IAAAA,KAAK,CAACP,IAAN,GAAaA,IAAb;AACA,WAAOO,KAAP;AACD;;AAxD+B","sourcesContent":["export default class TweetService {\n  tweets = [\n    {\n      id: 1,\n      text: '드림코딩에서 강의 들으면 너무 좋으다',\n      createdAt: '2021-05-09T04:20:57.000Z',\n      name: 'Bob',\n      username: 'bob',\n      url: 'https://widgetwhats.com/app/uploads/2019/11/free-profile-photo-whatsapp-1.png',\n    },\n  ];\n\n  async getTweets(username) {\n    return username\n      ? this.tweets.filter((tweet) => tweet.username === username)\n      : this.tweets;\n  }\n\n  async postTweet(text) {\n    const tweet = {\n      id: Date.now(),\n      createdAt: new Date(),\n      name: 'Kevin',\n      username: 'kevin',\n      text,\n    };\n    this.tweets.push(tweet);\n\n    fetch(`${process.env.REACT_APP_BASE_URL}/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        tweet: {\n          name: tweet.name,\n          text: tweet.text,\n        },\n      }),\n    })\n      .then(console.log('Hello'))\n      .catch(console.error);\n    return tweet;\n  }\n\n  async deleteTweet(tweetId) {\n    this.tweets = this.tweets.filter((tweet) => tweet.id !== tweetId);\n  }\n\n  async updateTweet(tweetId, text) {\n    const tweet = this.tweets.find((tweet) => tweet.id === tweetId);\n    if (!tweet) {\n      throw new Error('tweet not found!');\n    }\n    tweet.text = text;\n    return tweet;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}